

variables:
  TF_VAR_AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
  TF_VAR_AWS_SECRET_KEY: ${AWS_SECRET_KEY}

cache:
  paths:
    - ${CI_PROJECT_DIR}/ansible/hosts
    - ${CI_PROJECT_DIR}/terraform/terraform.tfstate

stages:
  - tf_apply
  - ansible_docker_install
  - copy_compose_file_to_remote
  - tf_destroy


terraform_apply:
  stage: tf_apply
  tags:
    - test_job
    - wordpress
  script:
    - cd ./terraform
    - terraform init
    - terraform apply -auto-approve

ansible_docker_install:
  stage: ansible_docker_install
  tags:
    - test_job
    - wordpress
  before_script:
    - FIRST_SERVER=$(cat ${CI_PROJECT_DIR}/ansible/hosts | sed -n '1p')
    - SECOND_SERVER=$(cat ${CI_PROJECT_DIR}/ansible/hosts | sed -n '2p')
    - cd ${CI_PROJECT_DIR}/infrastructure
    - chmod +x ./check_ssh.sh
    - ./check_ssh.sh ${FIRST_SERVER}
    - ./check_ssh.sh ${SECOND_SERVER}
  script:
    - cd ${CI_PROJECT_DIR}/ansible
    - ansible-playbook install_docker.yml
  allow_failure: true
  needs:
    - job: terraform_apply

terraform_destroy:
  stage: tf_destroy
  tags:
    - test_job
    - wordpress
  script:
    - cd ./terraform
    - terraform init
    - terraform show
    - terraform destroy -auto-approve
  when: manual
  needs:
    - job: terraform_apply
      # artifacts: true